#!/bin/bash
set -euo pipefail
here=$(dirname "${BASH_SOURCE[0]}")

if [ $# -ne 1 ]; then
  echo >&2 "usage: $0 outputdir"
  exit 1
fi
out=$1

stdenv=()

build() {
  module=$1
  shift
  "$here"/build "$out/$module" "$here/module/$module" \
    "${stdenv[@]}" "${@/#/$out/}"
}

lntool() {
  local path
  local target
  target=$1
  shift
  for tool in "$@"; do
    path=$(type -ap "$tool" |head -n1)
    ln -s "$path" "$target/$tool"
  done
}

rm -rf "$out"/build-tools
mkdir -p "$out"/build-tools/bin
lntool "$out"/build-tools/bin \
  ar \
  as \
  basename \
  bash \
  c++ \
  cat \
  cc \
  chmod \
  cp \
  cut \
  date \
  dirname \
  echo \
  egrep \
  env \
  expand \
  expr \
  false \
  fgrep \
  gcc \
  g++ \
  grep \
  gzip \
  head \
  help2man \
  id \
  install \
  ld \
  ln \
  ls \
  mkdir \
  mktemp \
  mv \
  nm \
  objcopy \
  objdump \
  perl \
  printenv \
  pwd \
  ranlib \
  readelf \
  readlink \
  rm \
  rmdir \
  sed \
  sh \
  sleep \
  sort \
  stat \
  strip \
  tail \
  tar \
  touch \
  tr \
  true \
  uname \
  uniq \
  wc \
  wget
stdenv+=("$out"/build-tools)

build make
stdenv+=("$out"/make)

build mawk
build gawk mawk
build xz gawk
build diffutils gawk xz
build findutils gawk

stdenv+=("$out"/diffutils)
stdenv+=("$out"/findutils)
stdenv+=("$out"/gawk)
stdenv+=("$out"/xz)

build bzip2
build patch
build file
build ed
build texinfo
build bc ed texinfo
build m4
build autoconf m4
build automake autoconf
build bison m4
build flex bison m4
build libtool m4
build gperf
build which
build ctng automake bison bzip2 file flex gperf \
  libtool m4 patch texinfo which
build cross ctng
build cross-native cross ctng
build static-bash cross
build coreutils cross
build tar cross
build gzip cross
build grep cross
build sed cross
build linux bc cross
build tree linux static-bash cross-native \
  coreutils tar gzip \
  grep sed
