#!/bin/bash
set -euo pipefail
here=$(dirname "${BASH_SOURCE[0]}")

if [ $# -ne 1 ]; then
  echo >&2 "usage: $0 outputdir"
  exit 1
fi
out=$1

stdenv=()

build() {
  module=$1
  shift
  "$here"/build "$out/$module" "$here/module/$module" \
    "${stdenv[@]}" "${@/#/$out/}"
}

lntool() {
  local path
  local target
  target=$1
  shift
  for tool in "$@"; do
    path=$(type -ap "$tool" |head -n1)
    ln -s "$path" "$target/$tool"
  done
}

rm -rf "$out"/build-tools
mkdir -p "$out"/build-tools/bin
lntool "$out"/build-tools/bin \
  ar \
  as \
  basename \
  bash \
  c++ \
  cat \
  cc \
  chmod \
  cp \
  cut \
  date \
  dirname \
  echo \
  egrep \
  env \
  expand \
  expr \
  false \
  fgrep \
  gcc \
  g++ \
  grep \
  gzip \
  head \
  help2man \
  id \
  install \
  ld \
  ln \
  ls \
  mkdir \
  mktemp \
  mv \
  nm \
  objcopy \
  objdump \
  perl \
  printenv \
  pwd \
  ranlib \
  readelf \
  readlink \
  rm \
  rmdir \
  sed \
  sh \
  sleep \
  sort \
  stat \
  strip \
  tail \
  tar \
  touch \
  tr \
  true \
  uname \
  uniq \
  wc
stdenv+=("$out"/build-tools)

build make
stdenv+=("$out"/make)

build mawk
build gawk mawk
build xz gawk
build bad-cmp
build diffutils gawk xz bad-cmp
build findutils gawk

stdenv+=("$out"/diffutils)
stdenv+=("$out"/findutils)
stdenv+=("$out"/gawk)
stdenv+=("$out"/xz)

build bzip2
build ed
build fake-wget
build file
build m4
build gperf
build patch
build texinfo
build which
build autoconf m4
build automake autoconf
build bc ed texinfo
build bison m4
build flex bison m4
build libtool m4
build ctng automake bison bzip2 fake-wget file flex gperf \
  libtool m4 patch texinfo which
build cross ctng
build coreutils cross
build grep cross
build gzip cross
build linux bc cross
build sed cross
build static-bash cross
build tar cross
build cross-native cross ctng
build tree coreutils cross-native grep gzip \
  linux sed static-bash tar
