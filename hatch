#!/bin/bash
set -euo pipefail
here=$(dirname "${BASH_SOURCE[0]}")

if [ $# -ne 1 ]; then
  echo >&2 "usage: $0 outputdir"
  exit 1
fi
out=$1

build() {
  module=$1
  shift
  "$here"/build "$out/$module" "$here/module/$module" \
    "$out"/build-tools "${@/#/$out/}"
}

lntool() {
  local path
  local target
  target=$1
  shift
  for tool in "$@"; do
    path=$(type -ap "$tool" |head -n1)
    ln -s "$path" "$target/$tool"
  done
}

rm -rf "$out"/build-tools
mkdir -p "$out"/build-tools/bin
lntool "$out"/build-tools/bin \
  ar \
  as \
  automake \
  awk \
  basename \
  bash \
  bc \
  bzip2 \
  c++ \
  cat \
  cc \
  chmod \
  cmp \
  cp \
  cut \
  date \
  diff \
  dirname \
  echo \
  egrep \
  env \
  expand \
  expr \
  false \
  file \
  find \
  fgrep \
  gawk \
  gcc \
  g++ \
  grep \
  gzip \
  head \
  help2man \
  id \
  install \
  ld \
  libtool \
  libtoolize \
  ln \
  ls \
  make \
  makeinfo \
  mkdir \
  mktemp \
  mv \
  nm \
  objcopy \
  objdump \
  patch \
  perl \
  printenv \
  pwd \
  ranlib \
  readelf \
  readlink \
  rm \
  rmdir \
  sed \
  sh \
  sleep \
  sort \
  stat \
  strip \
  tail \
  tar \
  touch \
  tr \
  true \
  uname \
  uniq \
  wc \
  wget \
  xargs \
  xz

build m4
build bison m4
build flex bison m4
build gperf
build which
build ctng bison flex gperf which
build cross ctng
build cross-native cross ctng
build static-bash cross
build coreutils cross
build tar cross
build gzip cross
build bzip2 cross
build xz cross
build grep cross
build awk cross
build sed cross
build diffutils cross
build patch cross
build findutils cross
build linux cross
build xorriso
build grub xorriso
build tree linux static-bash cross-native \
  coreutils tar gzip bzip2 xz \
  grep awk sed \
  diffutils patch findutils
build image grub xorriso tree
